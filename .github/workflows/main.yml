name: Build and Test Qt Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # This step sets up the MSVC compiler environment on Windows
    - name: Setup MSVC
      if: runner.os == 'Windows'
      uses: microsoft/setup-msvc@v1 # Corrected version

    - name: Install dependencies
      run: pip install aqtinstall

    - name: Install Linux build dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libgl-dev libegl1-mesa-dev

    - name: Install Qt (Manual)
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          aqt install-qt windows desktop 6.6.0 win64_msvc2019_64 -O C:/Qt
          echo "C:/Qt/6.6.0/msvc2019_64/bin" >> $GITHUB_PATH
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          aqt install-qt mac desktop 6.6.0 clang_64 -O /Users/runner/Qt
          echo "/Users/runner/Qt/6.6.0/macos/bin" >> $GITHUB_PATH
        else
          aqt install-qt linux desktop 6.6.0 gcc_64 -O /home/runner/Qt
          echo "/home/runner/Qt/6.6.0/gcc_64/bin" >> $GITHUB_PATH
        fi
    
    - name: Configure Project (qmake)
      run: |
        mkdir build
        cd build
        qmake ${{ github.workspace }}/TicTacToe_With_Tests/TicTacToe_With_Tests.pro

    - name: Build Project (make/nmake)
      shell: bash
      run: |
        cd build
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          nmake
        else
          make
        fi

    - name: Run Tests
      shell: bash
      run: |
        cd build/TicTacToe_With_Tests/tests
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          ./release/tests.exe
        else
          ./tests
        fi
